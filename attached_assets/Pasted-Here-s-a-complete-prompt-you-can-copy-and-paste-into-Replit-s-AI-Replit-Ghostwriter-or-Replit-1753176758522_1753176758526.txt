Here's a **complete prompt** you can copy and paste into **Replit's AI (Replit Ghostwriter or Replit Chat)** to generate your **Flask-based Factory Management System step-by-step**:

---

### ✅ Replit AI Prompt to Build Factory Management System (Flask)

> ⚙️ **Prompt:**

I want you to help me build a Flask-based **Factory Management System** for a real-world small manufacturing company, step-by-step.

This app should include the following features:

---

### 🧱 1. Project Stack

* **Backend**: Python Flask
* **Database**: SQLite (can later upgrade to PostgreSQL)
* **UI**: Basic Bootstrap 5 (no fancy UI, just professional)
* **Templates**: Jinja2
* **Authentication**: Flask-Login
* **ORM**: SQLAlchemy

---

### 🧭 2. Core Modules (Step-by-step)

Start by helping me build one module at a time in clean steps:

1. **User Auth & Roles**

   * Admin and Staff login
   * Role-based access
   * CLI command to create admin
   * Permissions (basic)

2. **Inventory & Items**

   * Add/edit/delete items
   * Track quantity, unit of measure (kg, pcs, etc.)

3. **Purchase Orders**

   * Create PO with supplier name, multiple items, qty
   * Record received qty and update inventory
   * Status: Open / Partial / Closed

4. **Sales Orders**

   * Customer name, item sold, qty, amount
   * Update stock

5. **Job Work**

   * Track materials sent for job work and received back
   * Auto-update inventory

6. **Production & BOM**

   * Define Bill of Materials for a product
   * Consume raw materials and produce finished goods

7. **Employees & Salary**

   * Add employees with per-day / per-piece rates
   * Attendance & advance tracking
   * Salary calculations and export

8. **Notifications**

   * Print or trigger SMS/Email/WhatsApp (just simulate, no actual API for now)

9. **Reports**

   * View inventory, PO, sales, job work, production summaries
   * Export CSV/PDF

---

### 🧠 3. AI Integration Features

Also help me add optional AI-powered features later:

* **Demand forecasting**
* **Profitability analysis**
* **Auto-reorder suggestions**
* **Smart KPI dashboard**
* **AI assistant (Q\&A about reports)**

---

### 📁 4. File Structure

Use modular structure like:

```
factory_app/
│
├── app.py
├── models.py
├── forms.py
├── templates/
│   ├── base.html
│   ├── login.html
│   └── ...
├── static/
│   └── style.css
├── requirements.txt
├── config.py
```

---

### ✅ Instructions

Please:

* Guide me step-by-step
* Show working code blocks with comments
* Use minimal design
* Ensure app runs on Replit without fancy frontend
* After each module, help me test

---

Let’s start with **User Login and Admin Creation CLI command**.

---

You can now paste the above into Replit and say:
👉 “Please generate the first step” or “Let’s start building it.”

Let me know if you want this modified for **FastAPI** or **Next.js** frontend as well.
